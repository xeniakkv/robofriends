{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","Robots","map","robot","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACI,sBAAKC,UAAU,qDAAf,UACA,qBAAKC,IAAK,SAASC,IAAG,+BAA0BH,EAA1B,cACtB,gCACA,6BAAKF,IACL,4BAAIC,WCgBMK,EApBE,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAClB,OACG,8BAGDA,EAAOC,KAAI,SAACC,GAAD,OAEZ,cAAC,EAAD,CAEAP,GAAIO,EAAMP,GACVF,KAAMS,EAAMT,KACZC,MAAOQ,EAAMR,OAHRQ,EAAMP,UCIEQ,EAdG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aACjC,OACC,qBAAKT,UAAU,MAAf,SACA,uBACAA,UAAU,mBACVU,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCCII,EATA,SAACC,GACd,OACC,qBAAKC,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACGJ,EAAMK,YC+CGC,G,wDA1Cd,aAAe,IAAD,8BACb,gBAeDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAfzC,EAAKC,MAAQ,CACZtB,OAAQ,GACRI,YAAa,IAJD,E,gEAQO,IAAD,OACfmB,MAAM,8CACRC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UAExBF,MAAK,SAAAG,GAAK,OAAI,EAAKR,SAAS,CAAEnB,OAAQ2B,S,+BAQjC,IAAD,EAC4BC,KAAKN,MAA7BtB,EADJ,EACIA,OAAQI,EADZ,EACYA,YACbyB,EAAiB7B,EAAO8B,QAAO,SAAA5B,GACpC,OAAOA,EAAMT,KAAKsC,cAAcC,SAAS5B,EAAY2B,kBAEtD,OAAsB,IAAlB/B,EAAOiC,OACH,yCAIT,sBAAKrC,UAAU,KAAf,UACA,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcuB,KAAKX,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ6B,a,GAnCDK,cCIHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACA,cAAC,EAAD,MAEAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8a62ef52.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn (\r\n     <div className='tc bg-light-pink dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n     <img alt ='robots' src={`https://robohash.org/${id}?200x200`}/>\r\n     <div>\r\n     <h2>{name}</h2>\r\n     <p>{email}</p>\r\n     </div>\r\n     </div>\r\n\t\t);\r\n}\r\n\r\nexport default Card; ","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({Robots}) => {\r\n return (\r\n    <div>\r\n    {\r\n\r\n   Robots.map((robot) => \r\n\t(\r\n\t\t<Card \r\n\t\tkey={robot.id}\r\n\t\tid={robot.id} \r\n\t\tname={robot.name} \r\n\t\temail={robot.email}\r\n\t\t/>\r\n\t\t)\r\n)\r\n}\r\n    </div>\r\n\t\t);\r\n}\r\n\r\nexport default CardList; ","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield, searchChange}) => {\r\nreturn (\r\n\t<div className='pa2'>\r\n\t<input \r\n\tclassName='pa3 ba b--yellow'\r\n\ttype='search' \r\n\tplaceholder='search robots'\r\n\tonChange={searchChange}\r\n\t/>\r\n\t</div>\r\n\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\nconst Scroll = (props) => {\r\n  return (\r\n  \t<div style={{ overflow: 'scroll', border: '5px solid black', height: '500px'}}>\r\n     {props.children}\r\n     </div>\r\n  \t);\r\n\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport Scroll from '../Components/Scroll';\r\nimport {Robots} from '../Components/Robots';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.state = {\r\n\t\t\tRobots: [], \r\n\t\t\tsearchfield: ''\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n      fetch('https://jsonplaceholder.typicode.com/users')\r\n\t  .then(response=> response.json())\r\n\r\n\t   .then(users => this.setState({ Robots: users}));\r\n\t}\r\n\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchfield: event.target.value})\r\n\t\r\n}\r\nrender() {\r\n\t    const { Robots, searchfield } = this.state;\r\n\t\tconst filteredRobots = Robots.filter(robot =>{\r\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n\t})\r\n\t\tif (Robots.length === 0) {\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t} else { \r\n\t\t\r\n\treturn (\r\n\t<div className='tc'>\r\n\t<h1 className='f1'>RoboFriends</h1>\r\n\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t<Scroll>\r\n\t<CardList Robots={filteredRobots} />\r\n\t</Scroll>\r\n\t</div>\r\n\t);\r\n\t}\r\n}\r\n}\r\n\r\nexport default App; ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n  <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}